- name: Setup OpenVPN Clients da Vault
  hosts: all
  become: true
  become_user: root
  vars:
    vpn_ids: ["nbs", "tredipi"]  # Sovrascrivibile via -e vpn_ids=[...]



  pre_tasks:
    - name: Login a Vault via AppRole
      uri:
        url: "{{ lookup('env', 'VAULT_ADDR') }}/v1/auth/approle/login"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body:
          role_id: "{{ lookup('env', 'VAULT_ROLE_ID') }}"
          secret_id: "{{ lookup('env', 'VAULT_SECRET_ID') }}"
        return_content: yes
      register: vault_login
      delegate_to: localhost
      become: false   # <-- aggiungi questa riga

    - name: Estrai VAULT_TOKEN
      set_fact:
        VAULT_TOKEN: "{{ vault_login.json.auth.client_token }}"

    - name: Stampa il token ricevuto da Vault
      debug:
        msg: "Vault Token: {{ VAULT_TOKEN }}"

    - name: Propaga VAULT_TOKEN su tutti gli host
      set_fact:
         VAULT_TOKEN: "{{ vault_login.json.auth.client_token }}"
      run_once: true
      delegate_to: localhost
      delegate_facts: true

  tasks:

    - name: Debug variabile VAULT_ADDR
      debug:
        msg: "{{ lookup('env', 'VAULT_ADDR') }}"

    - name: Verifica privilegi sudo
      command: whoami
      register: whoami_output

    
    - name: Recupera configurazioni VPN da Vault e installa OpenVPN
      include_tasks: configure_openvpn.yml
      loop: "{{ vpn_ids }}"
      loop_control:
        loop_var: vpn_id

